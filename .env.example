# Telegram API Credentials (Required - get from https://my.telegram.org/apps)
TELEGRAM_API_ID=123456
TELEGRAM_API_HASH=0123456789abcdef0123456789abcdef

# Session Management (Choose ONE)
# Option 1: File-based session (a .session file will be created)
TELEGRAM_SESSION_NAME=telegram_session
# Option 2: String-based session (if you generate one, e.g., using Telethon's string session generator)
TELEGRAM_SESSION_STRING=

# --- Test Script Configuration (test.py) ---
# Fill these with IDs/paths relevant to YOUR test environment.
# Using real user/group IDs requires caution and consent.

# A chat ID where the script can send/edit/delete messages safely.
# Defaults to your "Saved Messages" if left empty or 0.
TEST_CHAT_ID=0

# The ID of a Supergroup or Channel you own or are an admin in.
# Required for testing admin actions (ban, invite, promote, etc.).
TEST_SUPERGROUP_ID=0

# The numeric User ID of a TEST account (NOT a real person unless they consent).
# This user will be banned/unbanned/invited/promoted in the TEST_SUPERGROUP_ID.
TEST_USER_ID=0

# The username (without @) of the TEST_USER_ID.
TEST_USERNAME=username

# --- Optional Test Variables ---

# Phone number (E.164 format, e.g., +15551234567) for add_contact test.
TEST_CONTACT_PHONE=+15551234567
TEST_CONTACT_FNAME=Test
TEST_CONTACT_LNAME=Contact

# Paths to dummy files for testing uploads/sending media.
# The script will create test_upload.txt if it doesn't exist.
# You might need to provide small, valid image/voice/sticker files for other tests.
TEST_FILE_PATH=test_upload.txt
TEST_PHOTO_PATH=test_photo.jpg
TEST_VOICE_PATH=test_voice.ogg
TEST_STICKER_PATH=sticker.webp

# Username of a bot you own (required for get_bot_info, set_bot_commands tests)
TEST_BOT_USERNAME=your_bot_username

# Hash part or full invite link for a group/channel you want to test joining
# Required for join_chat_by_link / import_chat_invite tests
TEST_INVITE_LINK_HASH=https://t.me/+AbCdEfGhIjK